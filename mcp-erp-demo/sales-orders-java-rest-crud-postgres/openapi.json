{
  "openapi": "3.0.3",
  "info": {
    "title": "Sales Order API",
    "description": "REST API for managing sales orders with order details.\n\nAPI Documentation is available at:\n- OpenAPI JSON: http://localhost:8081/api-docs\n- Swagger UI: http://localhost:8081/swagger-ui.html",
    "contact": {
      "name": "API Support",
      "email": "support@example.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:8081",
      "description": "Development Server"
    }
  ],
  "tags": [
    {
      "name": "Order Management",
      "description": "APIs for managing sales orders"
    }
  ],
  "paths": {
    "/api/orders": {
      "get": {
        "tags": [
          "Order Management"
        ],
        "summary": "Get all orders",
        "description": "Returns a list of all orders",
        "operationId": "getAllOrders",
        "responses": {
          "200": {
            "description": "List of orders retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderDTO"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Order Management"
        ],
        "summary": "Create a new order",
        "description": "Creates a new sales order with order details",
        "operationId": "createOrder",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Order created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/{id}": {
      "get": {
        "tags": [
          "Order Management"
        ],
        "summary": "Get order by ID",
        "description": "Returns a single order by its ID",
        "operationId": "getOrderById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the order to retrieve",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDTO"
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Order Management"
        ],
        "summary": "Update an order",
        "description": "Updates an existing order",
        "operationId": "updateOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the order to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OrderDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Order updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDTO"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Order Management"
        ],
        "summary": "Delete an order",
        "description": "Deletes an order by its ID",
        "operationId": "deleteOrder",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the order to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Order deleted successfully"
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/{id}/status": {
      "patch": {
        "tags": [
          "Order Management"
        ],
        "summary": "Update order status",
        "description": "Updates the status of an existing order",
        "operationId": "updateOrderStatus",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the order to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "New status",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/OrderStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order status updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDTO"
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/number/{orderNumber}": {
      "get": {
        "tags": [
          "Order Management"
        ],
        "summary": "Get order by order number",
        "description": "Returns a single order by its order number",
        "operationId": "getOrderByOrderNumber",
        "parameters": [
          {
            "name": "orderNumber",
            "in": "path",
            "description": "Order number to retrieve",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Order found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrderDTO"
                }
              }
            }
          },
          "404": {
            "description": "Order not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/customer": {
      "get": {
        "tags": [
          "Order Management"
        ],
        "summary": "Find orders by customer name",
        "description": "Returns orders matching the customer name (partial match, case-insensitive)",
        "operationId": "findOrdersByCustomerName",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Customer name to search for",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of matching orders retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/status/{status}": {
      "get": {
        "tags": [
          "Order Management"
        ],
        "summary": "Find orders by status",
        "description": "Returns orders with the specified status",
        "operationId": "findOrdersByStatus",
        "parameters": [
          {
            "name": "status",
            "in": "path",
            "description": "Status to filter by",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/OrderStatus"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of matching orders retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderDTO"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/orders/date-range": {
      "get": {
        "tags": [
          "Order Management"
        ],
        "summary": "Find orders by date range",
        "description": "Returns orders placed between the specified dates",
        "operationId": "findOrdersByDateRange",
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "description": "Start date (ISO format)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "endDate",
            "in": "query",
            "description": "End date (ISO format)",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of matching orders retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/OrderDTO"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "OrderDTO": {
        "type": "object",
        "description": "Data Transfer Object for order operations",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the order (only used in responses)",
            "example": 1
          },
          "orderNumber": {
            "type": "string",
            "description": "Unique order number (generated automatically for new orders)",
            "example": "ORD-2025-0001"
          },
          "customerName": {
            "type": "string",
            "description": "Name of the customer",
            "example": "John Doe"
          },
          "orderDate": {
            "type": "string",
            "format": "date-time",
            "description": "Date when the order was placed (defaults to current time if not provided)",
            "example": "2025-03-10T10:30:00"
          },
          "status": {
            "$ref": "#/components/schemas/OrderStatus"
          },
          "totalAmount": {
            "type": "number",
            "format": "double",
            "description": "Total amount of the order (calculated automatically from order details)",
            "example": 299.99
          },
          "orderDetails": {
            "type": "array",
            "description": "List of order details",
            "items": {
              "$ref": "#/components/schemas/OrderDetailDTO"
            }
          }
        },
        "required": [
          "customerName",
          "orderDetails"
        ]
      },
      "OrderDetailDTO": {
        "type": "object",
        "description": "Data Transfer Object for order detail operations",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "ID of the order detail (only used in responses)",
            "example": 1
          },
          "productName": {
            "type": "string",
            "description": "Name of the product",
            "example": "Smartphone XYZ"
          },
          "quantity": {
            "type": "integer",
            "format": "int32",
            "description": "Quantity of the product",
            "example": 2
          },
          "unitPrice": {
            "type": "number",
            "format": "double",
            "description": "Price per unit of the product",
            "example": 499.99
          },
          "subtotal": {
            "type": "number",
            "format": "double",
            "description": "Subtotal for this line item (calculated automatically)",
            "example": 999.98
          }
        },
        "required": [
          "productName",
          "quantity",
          "unitPrice"
        ]
      },
      "OrderStatus": {
        "type": "string",
        "description": "Enumeration of possible order statuses",
        "enum": [
          "PENDING",
          "PROCESSING",
          "SHIPPED",
          "DELIVERED",
          "CANCELLED"
        ]
      },
      "ErrorResponse": {
        "type": "object",
        "description": "Standard error response",
        "properties": {
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Timestamp when the error occurred",
            "example": "2025-03-11T09:22:00"
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "description": "HTTP status code",
            "example": 404
          },
          "error": {
            "type": "string",
            "description": "Error type",
            "example": "Not Found"
          },
          "message": {
            "type": "string",
            "description": "Error message",
            "example": "Order not found with id: 1"
          },
          "details": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Detailed error information for validation errors"
          }
        }
      }
    }
  }
}
