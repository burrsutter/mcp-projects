openapi: 3.0.3
info:
  title: ERP Product Catalog API
  description: API for managing an ERP product catalog
  version: 1.0.0
  contact:
    name: API Support
    email: support@example.com
servers:
  - url: http://localhost:8000
    description: Local development server
paths:
  /products/:
    post:
      summary: Create a new product
      description: Create a new product in the catalog
      tags:
        - products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreate'
      responses:
        '201':
          description: Product created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: Get all products
      description: Retrieve products with filtering and pagination
      tags:
        - products
      parameters:
        - name: page
          in: query
          description: Page number
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
        - name: page_size
          in: query
          description: Items per page
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
        - name: sku
          in: query
          description: Filter by SKU
          required: false
          schema:
            type: string
        - name: name
          in: query
          description: Filter by name (partial match)
          required: false
          schema:
            type: string
        - name: category
          in: query
          description: Filter by category
          required: false
          schema:
            type: string
        - name: min_price
          in: query
          description: Minimum price
          required: false
          schema:
            type: number
            format: float
            minimum: 0
        - name: max_price
          in: query
          description: Maximum price
          required: false
          schema:
            type: number
            format: float
            minimum: 0
        - name: is_active
          in: query
          description: Filter by active status (1=active, 0=inactive)
          required: false
          schema:
            type: integer
            enum: [0, 1]
      responses:
        '200':
          description: List of products
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductList'
  /products/{product_id}:
    get:
      summary: Get product by ID
      description: Retrieve a specific product by ID
      tags:
        - products
      parameters:
        - name: product_id
          in: path
          description: The ID of the product to retrieve
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update a product
      description: Update a product's information
      tags:
        - products
      parameters:
        - name: product_id
          in: path
          description: The ID of the product to update
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdate'
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a product
      description: Delete a product
      tags:
        - products
      parameters:
        - name: product_id
          in: path
          description: The ID of the product to delete
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
      responses:
        '204':
          description: Product deleted successfully
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /products/sku/{sku}:
    get:
      summary: Get product by SKU
      description: Retrieve a specific product by SKU
      tags:
        - products
      parameters:
        - name: sku
          in: path
          description: The SKU of the product to retrieve
          required: true
          schema:
            type: string
            minLength: 3
            maxLength: 50
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    ProductBase:
      type: object
      required:
        - sku
        - name
        - price
      properties:
        sku:
          type: string
          description: Stock Keeping Unit, unique identifier for the product
          minLength: 3
          maxLength: 50
          example: PROD-001
        name:
          type: string
          description: Product name
          minLength: 1
          maxLength: 255
          example: Ergonomic Office Chair
        description:
          type: string
          description: Detailed product description
          example: Comfortable office chair with lumbar support and adjustable height
        category:
          type: string
          description: Product category
          maxLength: 100
          example: Office Furniture
        price:
          type: number
          format: float
          description: Selling price of the product
          minimum: 0
          exclusiveMinimum: true
          example: 199.99
        cost:
          type: number
          format: float
          description: Cost price of the product
          minimum: 0
          example: 120.00
        stock_quantity:
          type: integer
          description: Current stock quantity
          minimum: 0
          default: 0
          example: 50
        manufacturer:
          type: string
          description: Product manufacturer
          maxLength: 255
          example: ErgoDesigns
        supplier:
          type: string
          description: Product supplier
          maxLength: 255
          example: Office Supplies Inc.
        weight:
          type: number
          format: float
          description: Product weight
          minimum: 0
          example: 15.5
        dimensions:
          type: string
          description: Product dimensions (LxWxH)
          maxLength: 100
          example: 60x65x120
        is_active:
          type: integer
          description: Product status (1 for active, 0 for inactive)
          minimum: 0
          maximum: 1
          default: 1
          example: 1
    ProductCreate:
      allOf:
        - $ref: '#/components/schemas/ProductBase'
    ProductUpdate:
      type: object
      properties:
        sku:
          type: string
          description: Stock Keeping Unit, unique identifier for the product
          minLength: 3
          maxLength: 50
          example: PROD-001
        name:
          type: string
          description: Product name
          minLength: 1
          maxLength: 255
          example: Ergonomic Office Chair
        description:
          type: string
          description: Detailed product description
          example: Comfortable office chair with lumbar support and adjustable height
        category:
          type: string
          description: Product category
          maxLength: 100
          example: Office Furniture
        price:
          type: number
          format: float
          description: Selling price of the product
          minimum: 0
          exclusiveMinimum: true
          example: 199.99
        cost:
          type: number
          format: float
          description: Cost price of the product
          minimum: 0
          example: 120.00
        stock_quantity:
          type: integer
          description: Current stock quantity
          minimum: 0
          example: 50
        manufacturer:
          type: string
          description: Product manufacturer
          maxLength: 255
          example: ErgoDesigns
        supplier:
          type: string
          description: Product supplier
          maxLength: 255
          example: Office Supplies Inc.
        weight:
          type: number
          format: float
          description: Product weight
          minimum: 0
          example: 15.5
        dimensions:
          type: string
          description: Product dimensions (LxWxH)
          maxLength: 100
          example: 60x65x120
        is_active:
          type: integer
          description: Product status (1 for active, 0 for inactive)
          minimum: 0
          maximum: 1
          example: 1
    Product:
      allOf:
        - $ref: '#/components/schemas/ProductBase'
        - type: object
          required:
            - id
            - created_at
          properties:
            id:
              type: integer
              format: int64
              description: Unique identifier for the product
              example: 1
            created_at:
              type: string
              format: date-time
              description: Timestamp when the product record was created
              example: '2025-03-10T22:00:00Z'
            updated_at:
              type: string
              format: date-time
              description: Timestamp when the product record was last updated
              example: '2025-03-10T22:30:00Z'
    ProductList:
      type: object
      required:
        - items
        - total
        - page
        - page_size
        - pages
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        total:
          type: integer
          description: Total number of items
          example: 42
        page:
          type: integer
          description: Current page number
          example: 1
        page_size:
          type: integer
          description: Number of items per page
          example: 10
        pages:
          type: integer
          description: Total number of pages
          example: 5
    Error:
      type: object
      required:
        - detail
      properties:
        detail:
          type: string
          description: Error message
          example: Product with ID 123 not found
